"0","#subset the data for first 101 rows as glmer_qualitative df consists of columns for each segment and each rater for interpretability evaluation"
"0","subset_glmer_qualitative<- data.frame(glmer_qualitative[1:98,])"
"0","#change NA values with Uninterpretable and have it as another level"
"0","subset_glmer_qualitative<- data.frame(lapply(subset_glmer_qualitative, function(x) {"
"0","     if(anyNA(x)) {"
"0","     levels(x) <- c(levels(x), ""U"")"
"0","     x[is.na(x)] <- ""U"""
"0","     x}"
"0","     else x"
"0","  }))"
"0","#change 2 empty strigns in rater 1's reference to ""U"" as well"
"0","levels(subset_glmer_qualitative$k_rs_e)[1]<-""U"""
"0","#reorder the levels aligned with the other factors"
"0","subset_glmer_qualitative$k_rs_e<- ordered(subset_glmer_qualitative$k_rs_e, levels=c(""n"", ""y"", ""U""))"
"0","#sensitivity and specificity calculation separately for each rater and segment (but we take only sensitivity into account, since we converted uninterpretable to ""n"")"
"0","#reference for rater 1"
"0","ref_k_wt_uni<- subset_glmer_qualitative$k_RS_e_uni"
"0","#reference for rater 2"
"0","ref_i_wt_uni<- subset_glmer_qualitative$i_rs_e_uni"
"0","#rater 1's evaluation with Uninterpretable included  as another level"
"0","for (i in 11:(ncol(subset_glmer_qualitative)-11)){"
"0","  print(colnames(subset_glmer_qualitative[i]))"
"0","  "
"0","print(confusionMatrix(subset_glmer_qualitative[,i], ref_k_wt_uni,positive=levels(ref_k_wt_uni)[2])$byClass)"
"0","}"
"1","[1]"
"1"," ""k_rs_d_uni"""
"1","
"
"1","         Sensitivity "
"1","         Specificity "
"1","      Pos Pred Value "
"1","      Neg Pred Value "
"1","           Precision "
"1","
"
"1","               0.918 "
"1","               0.811 "
"1","               0.889 "
"1","               0.857 "
"1","               0.889 "
"1","
"
"1","              Recall "
"1","                  F1 "
"1","          Prevalence "
"1","      Detection Rate "
"1","Detection Prevalence "
"1","
"
"1","               0.918 "
"1","               0.903 "
"1","               0.622 "
"1","               0.571 "
"1","               0.643 "
"1","
"
"1","   Balanced Accuracy "
"1","
"
"1","               0.864 "
"1","
"
"1","[1]"
"1"," ""k_rs_c_uni"""
"1","
"
"1","         Sensitivity "
"1","         Specificity "
"1","      Pos Pred Value "
"1","      Neg Pred Value "
"1","           Precision "
"1","
"
"1","               0.836 "
"1","               0.757 "
"1","               0.850 "
"1","               0.737 "
"1","               0.850 "
"1","
"
"1","              Recall "
"1","                  F1 "
"1","          Prevalence "
"1","      Detection Rate "
"1","Detection Prevalence "
"1","
"
"1","               0.836 "
"1","               0.843 "
"1","               0.622 "
"1","               0.520 "
"1","               0.612 "
"1","
"
"1","   Balanced Accuracy "
"1","
"
"1","               0.796 "
"1","
"
"1","[1]"
"1"," ""k_rs_B_uni"""
"1","
"
"1","         Sensitivity "
"1","         Specificity "
"1","      Pos Pred Value "
"1","      Neg Pred Value "
"1","           Precision "
"1","
"
"1","               0.705 "
"1","               0.838 "
"1","               0.878 "
"1","               0.633 "
"1","               0.878 "
"1","
"
"1","              Recall "
"1","                  F1 "
"1","          Prevalence "
"1","      Detection Rate "
"1","Detection Prevalence "
"1","
"
"1","               0.705 "
"1","               0.782 "
"1","               0.622 "
"1","               0.439 "
"1","               0.500 "
"1","
"
"1","   Balanced Accuracy "
"1","
"
"1","               0.771 "
"1","
"
"1","[1]"
"1"," ""k_rs_a_uni"""
"1","
"
"1","         Sensitivity "
"1","         Specificity "
"1","      Pos Pred Value "
"1","      Neg Pred Value "
"1","           Precision "
"1","
"
"1","               0.574 "
"1","               0.757 "
"1","               0.795 "
"1","               0.519 "
"1","               0.795 "
"1","
"
"1","              Recall "
"1","                  F1 "
"1","          Prevalence "
"1","      Detection Rate "
"1","Detection Prevalence "
"1","
"
"1","               0.574 "
"1","               0.667 "
"1","               0.622 "
"1","               0.357 "
"1","               0.449 "
"1","
"
"1","   Balanced Accuracy "
"1","
"
"1","               0.665 "
"1","
"
"0","#rater 2's evaluation with uninterpretable included"
"0","for (i in 22:(ncol(subset_glmer_qualitative))){"
"0","print(confusionMatrix(subset_glmer_qualitative[,i], ref_i_wt_uni, positive=levels(ref_i_wt_uni)[2])$byClass)"
"0","  print(colnames(subset_glmer_qualitative[i]))}"
"1","         Sensitivity "
"1","         Specificity "
"1","      Pos Pred Value "
"1","      Neg Pred Value "
"1","           Precision "
"1","
"
"1","               0.825 "
"1","               0.805 "
"1","               0.855 "
"1","               0.767 "
"1","               0.855 "
"1","
"
"1","              Recall "
"1","                  F1 "
"1","          Prevalence "
"1","      Detection Rate "
"1","Detection Prevalence "
"1","
"
"1","               0.825 "
"1","               0.839 "
"1","               0.582 "
"1","               0.480 "
"1","               0.561 "
"1","
"
"1","   Balanced Accuracy "
"1","
"
"1","               0.815 "
"1","
"
"1","[1]"
"1"," ""i_rs_d_uni"""
"1","
"
"1","         Sensitivity "
"1","         Specificity "
"1","      Pos Pred Value "
"1","      Neg Pred Value "
"1","           Precision "
"1","
"
"1","               0.772 "
"1","               0.756 "
"1","               0.815 "
"1","               0.705 "
"1","               0.815 "
"1","
"
"1","              Recall "
"1","                  F1 "
"1","          Prevalence "
"1","      Detection Rate "
"1","Detection Prevalence "
"1","
"
"1","               0.772 "
"1","               0.793 "
"1","               0.582 "
"1","               0.449 "
"1","               0.551 "
"1","
"
"1","   Balanced Accuracy "
"1","
"
"1","               0.764 "
"1","
"
"1","[1]"
"1"," ""i_rs_c_uni"""
"1","
"
"1","         Sensitivity "
"1","         Specificity "
"1","      Pos Pred Value "
"1","      Neg Pred Value "
"1","           Precision "
"1","
"
"1","               0.649 "
"1","               0.902 "
"1","               0.902 "
"1","               0.649 "
"1","               0.902 "
"1","
"
"1","              Recall "
"1","                  F1 "
"1","          Prevalence "
"1","      Detection Rate "
"1","Detection Prevalence "
"1","
"
"1","               0.649 "
"1","               0.755 "
"1","               0.582 "
"1","               0.378 "
"1","               0.418 "
"1","
"
"1","   Balanced Accuracy "
"1","
"
"1","               0.776 "
"1","
"
"1","[1]"
"1"," ""i_rs_b_uni"""
"1","
"
"1","         Sensitivity "
"1","         Specificity "
"1","      Pos Pred Value "
"1","      Neg Pred Value "
"1","           Precision "
"1","
"
"1","               0.561 "
"1","               0.854 "
"1","               0.842 "
"1","               0.583 "
"1","               0.842 "
"1","
"
"1","              Recall "
"1","                  F1 "
"1","          Prevalence "
"1","      Detection Rate "
"1","Detection Prevalence "
"1","
"
"1","               0.561 "
"1","               0.674 "
"1","               0.582 "
"1","               0.327 "
"1","               0.388 "
"1","
"
"1","   Balanced Accuracy "
"1","
"
"1","               0.708 "
"1","
"
"1","[1]"
"1"," ""i_rs_a_uni"""
"1","
"
"0","tb_sens<- read.csv(paste(data_path, ""sen_only_two_raters.csv"", sep=""/""),sep="";"", header=T)"
"0","colnames(tb_sens)<- c("" "", ""0.8 scan"", ""0.6 scan"", ""0.4 scan"", ""0.2 scan"" )"
"0","#use flextable function for table"
"0","flex<-regulartable(tb_sens)"
"0","flex<-merge_v(flex, j=c(1,2))"
"0","#flex<- set_header_labels( flex, sens_spe = "" "", raters= "" "", V2= ""0.8 scan"", V3=""0.6 scan"", V4=""0.4 scan"", V5=""0.2 scan"")%>% "
"0","set_formatter_type(flex, fmt_double=""%.2f"")"
